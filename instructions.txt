bhanusaienamala@Bhanus-MacBook-Pro ~ % curl -s -X POST https://ethonline2025.onrender.com/rebalance/preview \
  -H "Content-Type: application/json" \
  -d '{
    "usdc_balance":1200,"usdt_balance":800,"dai_balance":500,"fdusd_balance":300,
    "busd_balance":250,"tusd_balance":150,"usdp_balance":200,"pyusd_balance":100,
    "usdd_balance":400,"gusd_balance":100,"quote_amount":1000
  }' | jq .
{
  "ok": true,
  "current_allocation": {
    "USDC": 0.3,
    "USDT": 0.2,
    "DAI": 0.125,
    "FDUSD": 0.075,
    "BUSD": 0.0625,
    "TUSD": 0.0375,
    "USDP": 0.05,
    "PYUSD": 0.025,
    "USDD": 0.1,
    "GUSD": 0.025
  },
  "suggested_allocation": {
    "BUSD": 0.0909,
    "DAI": 0.0909,
    "FDUSD": 0.0909,
    "GUSD": 0.0909,
    "PYUSD": 0.0909,
    "TUSD": 0.0909,
    "USDC": 0.0909,
    "USDD": 0.1363,
    "USDP": 0.0909,
    "USDT": 0.1363
  },
  "trade_deltas": {
    "BUSD": 113.6,
    "DAI": -136.4,
    "FDUSD": 63.6,
    "GUSD": 263.6,
    "PYUSD": 263.6,
    "TUSD": 213.6,
    "USDC": -836.4,
    "USDD": 145.2,
    "USDP": 163.6,
    "USDT": -254.8
  },
  "swap_plan": {
    "base": "USDC",
    "sells_to_base": [
      {
        "src": "DAI",
        "dst": "USDC",
        "amount": 136.4,
        "intent": "SELL",
        "min_receive": null,
        "note": "fund base"
      },
      {
        "src": "USDT",
        "dst": "USDC",
        "amount": 254.8,
        "intent": "SELL",
        "min_receive": null,
        "note": "fund base"
      }
    ],
    "buys_from_base": [
      {
        "src": "USDC",
        "dst": "BUSD",
        "amount": 147.34,
        "intent": "BUY",
        "min_receive": null,
        "note": null
      },
      {
        "src": "USDC",
        "dst": "FDUSD",
        "amount": 82.49,
        "intent": "BUY",
        "min_receive": null,
        "note": null
      },
      {
        "src": "USDC",
        "dst": "GUSD",
        "amount": 341.9,
        "intent": "BUY",
        "min_receive": null,
        "note": null
      },
      {
        "src": "USDC",
        "dst": "PYUSD",
        "amount": 341.9,
        "intent": "BUY",
        "min_receive": null,
        "note": null
      },
      {
        "src": "USDC",
        "dst": "TUSD",
        "amount": 277.05,
        "intent": "BUY",
        "min_receive": null,
        "note": null
      },
      {
        "src": "USDC",
        "dst": "USDD",
        "amount": 188.33,
        "intent": "BUY",
        "min_receive": null,
        "note": null
      },
      {
        "src": "USDC",
        "dst": "USDP",
        "amount": 212.19,
        "intent": "BUY",
        "min_receive": null,
        "note": null
      }
    ],
    "base_funding": {
      "base_balance_start": 1200.0,
      "wallet_base_available": 0.0,
      "from_sells": 391.2
    },
    "base_pool_start": 1591.2,
    "base_needed_for_buys": 1226.8,
    "base_delta_target": -836.4,
    "base_pool_end": 0.0,
    "shortfall": 0.0,
    "warnings": []
  },
  "rationale": "Reasoner: Knowledge-graph mode: MeTTa policy used. Combined risks derived from peg⊕sentiment. Regime=GREEN, liquidity gate applied if deviation>0.30%.",
  "error": null
}

//Onboard a user
curl -s -X POST "<BASE>/users/onboard" \
  -H "Content-Type: application/json" \
  -d '{
    "wallet_address": "0xabc1234567890000000000000000000000000000",
    "telegram_chat_id": "",
    "nickname": "Alice"
  }' | jq
# → { "ok": true, "user_id": 1, "error": null }

//record user base_balance_start (get balances from metamask injected)
curl -s -X POST "<BASE>/users/balances" \
  -H "Content-Type: application/json" \
  -d '{
    "user_id": 1,
    "usdc_balance": 3000,
    "usdt_balance": 2000,
    "dai_balance": 1250,
    "fdusd_balance": 750,
    "busd_balance": 625,
    "tusd_balance": 375,
    "usdp_balance": 500,
    "pyusd_balance": 250,
    "usdd_balance": 1000,
    "gusd_balance": 250,
    "quote_amount": 1000
  }' | jq


//LINKING TELEGRAM
start backend with ./run.sh
(1) User clicks "Connect Telegram" => call below api

curl -s -X POST "http://127.0.0.1:8011/telegram/link" \
  -H "Content-Type: application/json" \
  -d '{
    "wallet_address": "0xAABBccddeeff0011223344556677889900aAbBcC",
    "nickname": "Alice"
  }' | jq

response = 

{
  "ok": true,
  "url": "https://t.me/MyPegBot?start=eyJ...",
  "token": "eyJ..."
}

	•	Frontend: window.open(resp.url, "_blank").
	•	User taps Start in Telegram; Telegram hits your webhook; backend consumes the token and stores the user’s chat_id.

(2) Poll the backend until connected:

curl -s -X POST "http://127.0.0.1:8011/users/status" \
  -H "Content-Type: application/json" \
  -d '{ "user_id": 1 }' | jq

When it returns ok:true, the Telegram chat is linked.  

//vacation mode on and off

curl -s -X POST "<BASE>/users/prefs" \
  -H "Content-Type: application/json" \
  -d '{
    "user_id": 1,
    "active": true,
    "alert_threshold": "GREEN",
    "daily_summary_hour_utc": 9
  }' | jq